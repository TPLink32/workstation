<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<HTML><HEAD><TITLE>lua-users wiki: Sample Code</TITLE>
<LINK TYPE="text/css" REL="stylesheet" HREF="main.css" tppabs="http://lua-users.org/styles/main.css">
</HEAD>
<BODY ><table width="100%" border="0"> <tr><td align=left width="100%"><h1><a href="javascript:if(confirm(%27http://lua-users.org/cgi-bin/wiki.pl?action=search&string=SampleCode&body=1  \n\nThis file was not retrieved by Teleport Ultra, because it is addressed on a path excluded by the site\%27s Robot Exclusion parameters.  (Teleport Ultra\%27s compliance with this system is optional; see the Project Properties, Netiquette page.)  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/cgi-bin/wiki.pl?action=search&string=SampleCode&body=1%27" tppabs="http://lua-users.org/cgi-bin/wiki.pl?action=search&string=SampleCode&body=1" title="List pages referring to SampleCode">Sample Code</a></h1></td><td align=right>
    <table cellpadding="0" cellspacing="0" border="0" width="1%">
      <tbody>
        <tr>
            <td><a href="javascript:if(confirm(%27http://lua-users.org/  \n\nThis file was not retrieved by Teleport Ultra, because it is addressed on a domain or path outside the boundaries set for its Starting Address.  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/%27" tppabs="http://lua-users.org/">
            <img src="nav-logo.png" tppabs="http://lua-users.org/images/nav-logo.png" alt="lua-users home" width="177" height="40" border="0"></a></td>
        </tr>
        <tr>
            <td>
            <table cellpadding="0" cellspacing="0" border="0" width="100%">
                <tbody>
                <tr>
                    <td><img src="nav-elbow.png" tppabs="http://lua-users.org/images/nav-elbow.png" alt="" width="48" height="40"></td>
                    <td nowrap valign="middle" width="100%">
                        <a href="index.htm" tppabs="http://lua-users.org/wiki/" class="nav">wiki</a></td>
                </tr>
                </tbody>
            </table>
            </td>
        </tr>
      </tbody>
    </table>
<form method="post" action="http://lua-users.org/wiki/FindPage" enctype="application/x-www-form-urlencoded" style="display:inline; margin:0;">
<input type="hidden" name="action" value="search"  /><input type="text" name="string"  size="20" style="" id="search_query1" /><input type="hidden" name="title" value="1"  /><input type="submit" name=".submit" value="Search" /><input type="hidden" name="body" value="on"  /></form></td></tr> </table>
<br clear=all>
Following is a list of pages with sample code.  Types of code include standalone reusable functions/classes, reusable modules, example code illustrating the use of other modules, tutorials on using other modules, full programs, and design patterns.<p>
<H3>Lua 5.x</H3>
<p>
<UL>
<li> <strong>Metatables - Classes</strong><UL>
<li> <a href="ClassesAndMethodsExample.htm" tppabs="http://lua-users.org/wiki/ClassesAndMethodsExample" >ClassesAndMethodsExample</a>  - a simple class implementation with inheritance (module)<li> <a href="LuaClassesWithMetatable.htm" tppabs="http://lua-users.org/wiki/LuaClassesWithMetatable" >LuaClassesWithMetatable</a> - creating classes via metatables (tutorial and code) (editor note: possibly move)<li> <a href="javascript:if(confirm(%27http://lua-users.org/wiki/YetAnotherClassImplementation  \n\nThis file was not retrieved by Teleport Ultra, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/wiki/YetAnotherClassImplementation%27" tppabs="http://lua-users.org/wiki/YetAnotherClassImplementation" >YetAnotherClassImplementation</a> - a complex class implementation with inheritance (module)<li> <a href="SimpleLuaClasses.htm" tppabs="http://lua-users.org/wiki/SimpleLuaClasses" >SimpleLuaClasses</a> - class declaration - a metatable approach (tutorial, design pattern, and function)<li> <a href="MultipleInheritanceClasses.htm" tppabs="http://lua-users.org/wiki/MultipleInheritanceClasses" >MultipleInheritanceClasses</a> - A multiple-inheritance class system including shared (virtual) inheritance (module)<li> <a href="javascript:if(confirm(%27http://lua-users.org/wiki/ObjectLua  \n\nThis file was not retrieved by Teleport Ultra, because it was unavailable, or its retrieval was aborted, or the project was stopped too soon.  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/wiki/ObjectLua%27" tppabs="http://lua-users.org/wiki/ObjectLua" >ObjectLua</a> - a simple implementation with single inheritance, virtual methods only, and Python-like access to super methods<li> <a href="ClassesViaModules.htm" tppabs="http://lua-users.org/wiki/ClassesViaModules" >ClassesViaModules</a> - Each class is stored in a module and is automatically wrapped on require().  Supports namespaces.<li> See also <a href="ObjectOrientedProgramming.htm" tppabs="http://lua-users.org/wiki/ObjectOrientedProgramming" >ObjectOrientedProgramming</a>.</UL>
<li> <strong>Metatables - Other Design Patterns</strong><UL>
<li> <a href="AccessHiddenTables.htm" tppabs="http://lua-users.org/wiki/AccessHiddenTables" >AccessHiddenTables</a> - Access hidden tables using metatables (functions)<li> <a href="ComparisonByValue.htm" tppabs="http://lua-users.org/wiki/ComparisonByValue" >ComparisonByValue</a> - make a table compare its keys by value rather than by reference<li> <a href="FuncTables.htm" tppabs="http://lua-users.org/wiki/FuncTables" >FuncTables</a> - memoization of functions using callable tables (design pattern, code, and tutorial) (editor note: possibly move)<li> <a href="FunctionalTuples.htm" tppabs="http://lua-users.org/wiki/FunctionalTuples" >FunctionalTuples</a> - implementing tuples in terms functions (design pattern and tutorial) (editor note: possibly move)<li> <a href="MutableFunctions.htm" tppabs="http://lua-users.org/wiki/MutableFunctions" >MutableFunctions</a> - using functions to simulate the semantics of tables (design pattern)<li> <a href="ObjectProperties.htm" tppabs="http://lua-users.org/wiki/ObjectProperties" >ObjectProperties</a> - implementing object properties - obj.field (function and design pattern)<li> <a href="ReadOnlyTables.htm" tppabs="http://lua-users.org/wiki/ReadOnlyTables" >ReadOnlyTables</a> - making a table read-only via metamethods (function and design pattern)<li> <a href="OrderedAssociativeTable.htm" tppabs="http://lua-users.org/wiki/OrderedAssociativeTable" >OrderedAssociativeTable</a> - iterate over a table using a sorted index (function and design pattern)<li> <a href="OrderedTable.htm" tppabs="http://lua-users.org/wiki/OrderedTable" >OrderedTable</a> - iterate over tables in the order of key insertion (function and design pattern)<li> <a href="OrderedTableSimple.htm" tppabs="http://lua-users.org/wiki/OrderedTableSimple" >OrderedTableSimple</a> - iterate over tables in the order of key insertion (function and design pattern)<li> <a href="ProxyBasedEncapsulation.htm" tppabs="http://lua-users.org/wiki/ProxyBasedEncapsulation" >ProxyBasedEncapsulation</a> - encapsulation of objects via proxy tables (function/design pattern)<li> <a href="RecursiveDataTypes.htm" tppabs="http://lua-users.org/wiki/RecursiveDataTypes" >RecursiveDataTypes</a> - handling recursive data types (design pattern and tutorial)<li> <a href="RecursiveReadOnlyTables.htm" tppabs="http://lua-users.org/wiki/RecursiveReadOnlyTables" >RecursiveReadOnlyTables</a> - making a nested table read-only via metamethods (function and design pattern)<li> <a href="SetVariablesAndTablesWithFunction.htm" tppabs="http://lua-users.org/wiki/SetVariablesAndTablesWithFunction" >SetVariablesAndTablesWithFunction</a> - recursively build and set table fields with dot notation--e.g. "x.y.z" (function and design pattern)<li> <a href="GeneralizedPairsAndIpairs.htm" tppabs="http://lua-users.org/wiki/GeneralizedPairsAndIpairs" >GeneralizedPairsAndIpairs</a> - <code>next</code>, <code>pairs</code>, and <code>ipairs</code> reimplemented to call metamethods (design pattern and functions)<li> <a href="NextMetamethodForIndexTable.htm" tppabs="http://lua-users.org/wiki/NextMetamethodForIndexTable" >NextMetamethodForIndexTable</a> - <code>next()</code>-like function for iterating table against table <code>__index</code> (function and design pattern)<li> <a href="AsciiMenu.htm" tppabs="http://lua-users.org/wiki/AsciiMenu" >AsciiMenu</a> - console-based menu system, illustrating menu definition via chain of '.' calls (design pattern)<li> <a href="OverloadedFunctions.htm" tppabs="http://lua-users.org/wiki/OverloadedFunctions" >OverloadedFunctions</a> - function dispatch by argument types which is defined implicitly by assignment into a virtual table<li> <a href="StrictStructs.htm" tppabs="http://lua-users.org/wiki/StrictStructs" >StrictStructs</a> - create tables from a template, with checking for unknown fields</UL>
<li> <strong>Data Structures</strong><UL>
<li> See <a href="DataStructures.htm" tppabs="http://lua-users.org/wiki/DataStructures" >DataStructures</a></UL>
<li> <strong>Algorithms/Traversal</strong><UL>
<li> <a href="BinaryInsert.htm" tppabs="http://lua-users.org/wiki/BinaryInsert" >BinaryInsert</a> - inserts a value into a sorted array via a binary search algorithm (function)<li> <a href="BinarySearch.htm" tppabs="http://lua-users.org/wiki/BinarySearch" >BinarySearch</a> - searches for a value in a sorted array via a binary search algorithm (function)<li> <a href="InterpolatingSearch.htm" tppabs="http://lua-users.org/wiki/InterpolatingSearch" >InterpolatingSearch</a> - searches for a value in a sorted array via an interpolating search algorithm (function)<li> <a href="LazySort.htm" tppabs="http://lua-users.org/wiki/LazySort" >LazySort</a> - sort only as much of a table as is necessary (function and tutorial)<li> <a href="LuaSorting.htm" tppabs="http://lua-users.org/wiki/LuaSorting" >LuaSorting</a> - a sample shellsort implementation in pure Lua (function)<li> <a href="SortedIteration.htm" tppabs="http://lua-users.org/wiki/SortedIteration" >SortedIteration</a> - iterating a table in order by keys (function)<li> <a href="SortedIterationSimple.htm" tppabs="http://lua-users.org/wiki/SortedIterationSimple" >SortedIterationSimple</a> - iterating a table in order by keys (function)<li> <a href="RangeIterator.htm" tppabs="http://lua-users.org/wiki/RangeIterator" >RangeIterator</a> - a 'range' iterator function that acts like basic for loops<li> <a href="MultipleKeyIndexing.htm" tppabs="http://lua-users.org/wiki/MultipleKeyIndexing" >MultipleKeyIndexing</a> - indexing by multiple keys implemented as a hash tree (module)</UL>
<li> <strong>String/Table Manipulation</strong><UL>
<li> <a href="SplitJoin.htm" tppabs="http://lua-users.org/wiki/SplitJoin" >SplitJoin</a> - Perl-like string split/join functions (functions)<li> <a href="StandardLibraries.htm" tppabs="http://lua-users.org/wiki/StandardLibraries" >StandardLibraries</a> - os, io, getopt, string, regex, xml, list/set/table, object, and math modules (modules)<li> <a href="StringInterpolation.htm" tppabs="http://lua-users.org/wiki/StringInterpolation" >StringInterpolation</a> - interpolating variables into strings in Lua (functions and design patterns)<li> <a href="StringRecipes.htm" tppabs="http://lua-users.org/wiki/StringRecipes" >StringRecipes</a> - solutions to various common string manipulation needs (example code)<li> <a href="VarExpand.htm" tppabs="http://lua-users.org/wiki/VarExpand" >VarExpand</a> - bash-style inline variable and code expansion<li> <a href="LuaRecipes.htm" tppabs="http://lua-users.org/wiki/LuaRecipes" >LuaRecipes</a> - useful code snippets and functions (design patterns)<li> <a href="LuaPrintf.htm" tppabs="http://lua-users.org/wiki/LuaPrintf" >LuaPrintf</a> - emulation of printf string formatting (function)<li> <a href="FormattingNumbers.htm" tppabs="http://lua-users.org/wiki/FormattingNumbers" >FormattingNumbers</a> - format numbers in monetary format (function)<li> <a href="EnhancedFileLines.htm" tppabs="http://lua-users.org/wiki/EnhancedFileLines" >EnhancedFileLines</a> - functions for portably handling '\r\n' chars (functions)<li> <a href="StringIndexing.htm" tppabs="http://lua-users.org/wiki/StringIndexing" >StringIndexing</a> - easy access to characters and substrings</UL>
<li> <strong>Preprocessing/Templates/Parsing</strong><UL>
<li> <a href="SimpleLuaPreprocessor.htm" tppabs="http://lua-users.org/wiki/SimpleLuaPreprocessor" >SimpleLuaPreprocessor</a> - macro processor (function)<li> <a href="TextTemplate.htm" tppabs="http://lua-users.org/wiki/TextTemplate" >TextTemplate</a> - macro processor (module)<li> <a href="SlightlyLessSimpleLuaPreprocessor.htm" tppabs="http://lua-users.org/wiki/SlightlyLessSimpleLuaPreprocessor" >SlightlyLessSimpleLuaPreprocessor</a> - macro processor (function/program)<li> <a href="LpegRecipes.htm" tppabs="http://lua-users.org/wiki/LpegRecipes" >LpegRecipes</a> - examples of using LPeg for parsing (examples)<li> <a href="LuaCsv.htm" tppabs="http://lua-users.org/wiki/LuaCsv" >LuaCsv</a> - a simple comma-separated-value line parser (function)<li> See also <a href="LuaGrammar.htm" tppabs="http://lua-users.org/wiki/LuaGrammar" >LuaGrammar</a>.</UL>
<li> <strong>Serialization</strong><UL>
<li> <a href="CopyTable.htm" tppabs="http://lua-users.org/wiki/CopyTable" >CopyTable</a> - return deep copy of table (function)<li> <a href="DataDumper.htm" tppabs="http://lua-users.org/wiki/DataDumper" >DataDumper</a> - dumps nearly any data into a Lua chunk string (function)<li> <a href="SaveTableToFile.htm" tppabs="http://lua-users.org/wiki/SaveTableToFile" >SaveTableToFile</a> - Save a table to file/string (functions)<li> <a href="ReadWriteFormat.htm" tppabs="http://lua-users.org/wiki/ReadWriteFormat" >ReadWriteFormat</a> - a way to pack / unpack integer values into a binary string (functions)<li> <a href="OutputLuaTableToHtmlFile.htm" tppabs="http://lua-users.org/wiki/OutputLuaTableToHtmlFile" >OutputLuaTableToHtmlFile</a> - converts a Lua table into an HTML file (function)<li> <a href="PersistentTablesSqlite.htm" tppabs="http://lua-users.org/wiki/PersistentTablesSqlite" >PersistentTablesSqlite</a> - persist Lua tables in SQLite database (sample code)<li> <a href="PickleTable.htm" tppabs="http://lua-users.org/wiki/PickleTable" >PickleTable</a> - Lua table serialization (module)<li> <a href="ReadDefinedChunks.htm" tppabs="http://lua-users.org/wiki/ReadDefinedChunks" >ReadDefinedChunks</a> - read delimited chunks from an file (function)<li> See also <a href="TableSerialization.htm" tppabs="http://lua-users.org/wiki/TableSerialization" >TableSerialization</a>.</UL>
<li> <strong>Mathematics/Numbers</strong><UL>
<li> <a href="FloatSum.htm" tppabs="http://lua-users.org/wiki/FloatSum" >FloatSum</a> - accurate floating point summation<li> <a href="SimpleRound.htm" tppabs="http://lua-users.org/wiki/SimpleRound" >SimpleRound</a> - round number to n decimal places (functions)<li> <a href="SimpleStats.htm" tppabs="http://lua-users.org/wiki/SimpleStats" >SimpleStats</a> - some simple statistics routes for tables.<li> <a href="LuaMatrix.htm" tppabs="http://lua-users.org/wiki/LuaMatrix" >LuaMatrix</a> - basic matrix functions (module)<li> <a href="SimpleFit.htm" tppabs="http://lua-users.org/wiki/SimpleFit" >SimpleFit</a> - curve fitting (module)<li> <a href="HammingNumbers.htm" tppabs="http://lua-users.org/wiki/HammingNumbers" >HammingNumbers</a> - enumerate hamming numbers (function)<li> <a href="HammingNumbersVariant.htm" tppabs="http://lua-users.org/wiki/HammingNumbersVariant" >HammingNumbersVariant</a> - enumerate hamming numbers, with lazy list (function)<li> <a href="ComplexNumbers.htm" tppabs="http://lua-users.org/wiki/ComplexNumbers" >ComplexNumbers</a> - simple attempt to handle complex numbers (functions)<li> <a href="IntegerDomain.htm" tppabs="http://lua-users.org/wiki/IntegerDomain" >IntegerDomain</a> - calculates the actual limits for integer numbers which can be exactly represented by Lua (function)<li> <a href="UnitConversion.htm" tppabs="http://lua-users.org/wiki/UnitConversion" >UnitConversion</a> - converting intervals of time (can be extended to any non-uniform system of measurement, such as Imperial units)<li> <a href="HyperbolicFunctions.htm" tppabs="http://lua-users.org/wiki/HyperbolicFunctions" >HyperbolicFunctions</a> - a pure Lua implementation for the hyperbolic trigonometric functions</UL>
<li> <strong>Encoding/Cryptography/Compression</strong><UL>
<li> <a href="BaseSixtyFour.htm" tppabs="http://lua-users.org/wiki/BaseSixtyFour" >BaseSixtyFour</a> - Base64 encode/decode (functions)<li> <a href="HexDump.htm" tppabs="http://lua-users.org/wiki/HexDump" >HexDump</a> - dump a string in typical 'hex dump' format<li> <a href="PortableNetworkGraphicsParser.htm" tppabs="http://lua-users.org/wiki/PortableNetworkGraphicsParser" >PortableNetworkGraphicsParser</a> - partial PNG graphics file parser (example)<li> <a href="SymbolicDifferentiation.htm" tppabs="http://lua-users.org/wiki/SymbolicDifferentiation" >SymbolicDifferentiation</a> - as titled, using Penlight library<li> <a href="SecureHashAlgorithm.htm" tppabs="http://lua-users.org/wiki/SecureHashAlgorithm" >SecureHashAlgorithm</a> - hash functions SHA224 and SHA256 (for Lua 5.2)</UL>
<li> <strong>Filesystem</strong><UL>
<li> <a href="DirTreeIterator.htm" tppabs="http://lua-users.org/wiki/DirTreeIterator" >DirTreeIterator</a> - iterator function for recursive file/directory traversal (function)<li> <a href="FileInputOutput.htm" tppabs="http://lua-users.org/wiki/FileInputOutput" >FileInputOutput</a> - input/output file utility functions (functions)<li> <a href="FileGlob.htm" tppabs="http://lua-users.org/wiki/FileGlob" >FileGlob</a> - matching filenames with glob expressions (function)<li> <a href="ExtensionProposal.htm" tppabs="http://lua-users.org/wiki/ExtensionProposal" >ExtensionProposal</a> - extended os and io API (modules)<li> <a href="CppStreamChunkReader.htm" tppabs="http://lua-users.org/wiki/CppStreamChunkReader" >CppStreamChunkReader</a> - lua_load chunk reader for any C++ std::istream (function)</UL>
<li> <strong>Coroutines</strong><UL>
<li> <a href="CopasExample.htm" tppabs="http://lua-users.org/wiki/CopasExample" >CopasExample</a> - TCP socket server utilizing Copas library (examples)<li> <a href="CoroutinesAsConnectionHandlers.htm" tppabs="http://lua-users.org/wiki/CoroutinesAsConnectionHandlers" >CoroutinesAsConnectionHandlers</a> - scaffolding for handling multiple sockets using coroutines (design pattern)<li> <a href="CoroutinesAsEventHandlers.htm" tppabs="http://lua-users.org/wiki/CoroutinesAsEventHandlers" >CoroutinesAsEventHandlers</a> - scaffolding for handling event responders (design pattern)<li> <a href="FunWithCoroutines.htm" tppabs="http://lua-users.org/wiki/FunWithCoroutines" >FunWithCoroutines</a> - tricks using coroutines: reverse string and control inversion (design patterns)</UL>
<li> <strong>Error Handling</strong><UL>
<li> <a href="LuaCarp.htm" tppabs="http://lua-users.org/wiki/LuaCarp" >LuaCarp</a> - ensures <code>error</code> function is passed correct level, like Perl Carp (module)</UL>
<li> <strong>Testing / Types Checking / Profiling</strong><UL>
<li> <a href="LuaTypeChecking.htm" tppabs="http://lua-users.org/wiki/LuaTypeChecking" >LuaTypeChecking</a> - implementing type checking in Lua (design patterns and code)<li> <a href="LuaUnit.htm" tppabs="http://lua-users.org/wiki/LuaUnit" >LuaUnit</a> - <a href="LuaUnit.htm" tppabs="http://lua-users.org/wiki/LuaUnit" >LuaUnit</a> unit testing framework (module)<li> <a href="ProfilerInLua.htm" tppabs="http://lua-users.org/wiki/ProfilerInLua" >ProfilerInLua</a> - very simple Lua profiler (module)<li> See also <a href="UnitTesting.htm" tppabs="http://lua-users.org/wiki/UnitTesting" >UnitTesting</a></UL>
<li> <strong>Command Line</strong><UL>
<li> <a href="CommandLineModule.htm" tppabs="http://lua-users.org/wiki/CommandLineModule" >CommandLineModule</a> - command line parsing<li> <a href="LappFramework.htm" tppabs="http://lua-users.org/wiki/LappFramework" >LappFramework</a> - command line parsing<li> <a href="CompleteWithReadline.htm" tppabs="http://lua-users.org/wiki/CompleteWithReadline" >CompleteWithReadline</a> - completion engine for standalone interpreter (functions)</UL>
<li> <strong>Module System</strong><UL>
<li> <a href="LuaModulesLoader.htm" tppabs="http://lua-users.org/wiki/LuaModulesLoader" >LuaModulesLoader</a> - a Lua implementation of the standard Lua module loader<li> <a href="BinaryModulesLoader.htm" tppabs="http://lua-users.org/wiki/BinaryModulesLoader" >BinaryModulesLoader</a> - a Lua implementation of the standard binary module loader<li> <a href="HashedModulesLoader.htm" tppabs="http://lua-users.org/wiki/HashedModulesLoader" >HashedModulesLoader</a> - a module loader that verifies the module cryptographic hash prior to loading<li> <a href="RecursiveRequire.htm" tppabs="http://lua-users.org/wiki/RecursiveRequire" >RecursiveRequire</a> - Handles recursive requires to a degree</UL>
<li> <strong>Time/Date</strong><UL>
<li> <a href="TimeZone.htm" tppabs="http://lua-users.org/wiki/TimeZone" >TimeZone</a> - obtaining portable timezone string in form +hhmm or -hhmm (function)<li> <a href="DateFormattingFunctions.htm" tppabs="http://lua-users.org/wiki/DateFormattingFunctions" >DateFormattingFunctions</a> - format date into various date string format (functions)<li> <a href="DayOfWeekAndDaysInMonthExample.htm" tppabs="http://lua-users.org/wiki/DayOfWeekAndDaysInMonthExample" >DayOfWeekAndDaysInMonthExample</a> - calculate number of days in month or day of week in calendar day (functions)<li> <a href="WeekNumberInYear.htm" tppabs="http://lua-users.org/wiki/WeekNumberInYear" >WeekNumberInYear</a> - calculate week number of the year according to ISO8601 (function)<li> <a href="DisplayCalendarInHtml.htm" tppabs="http://lua-users.org/wiki/DisplayCalendarInHtml" >DisplayCalendarInHtml</a> - creates calendar in HTML (function)</UL>
<li> <strong>XML</strong><UL>
<li> <a href="LuaXml.htm" tppabs="http://lua-users.org/wiki/LuaXml" >LuaXml</a> - handling XML with various libraries (sample code)<li> <a href="LxpTree.htm" tppabs="http://lua-users.org/wiki/LxpTree" >LxpTree</a> - constructs an XML tree from a string/file using <a href="LazyKit.htm" tppabs="http://lua-users.org/wiki/LazyKit" >LazyKit</a> (example code)<li> <a href="LuaProjectListToXml.htm" tppabs="http://lua-users.org/wiki/LuaProjectListToXml" >LuaProjectListToXml</a> - read list of Lua projects from Lua website and output as XML (program)</UL>
<li> <strong>Web/HTML</strong><UL>
<li> <a href="GdThumbnail.htm" tppabs="http://lua-users.org/wiki/GdThumbnail" >GdThumbnail</a> - thumbnailer using lua-gd (e.g. for web galleries or similar)<li> <a href="GettingTheTitleFromHtmlFiles.htm" tppabs="http://lua-users.org/wiki/GettingTheTitleFromHtmlFiles" >GettingTheTitleFromHtmlFiles</a> - parse title tag from HTML files (command-line program)<li> <a href="LuaToHtml.htm" tppabs="http://lua-users.org/wiki/LuaToHtml" >LuaToHtml</a> - convert (htmlize) Lua source to HTML (command-line program)</UL>
<li> <strong>Device I/O</strong><UL>
<li> <a href="SerialCommunication.htm" tppabs="http://lua-users.org/wiki/SerialCommunication" >SerialCommunication</a> - RS-232 serial communication (module)</UL>
<li> <strong>Techniques / Design Patterns / Code Structure</strong><UL>
<li> <a href="SwitchStatement.htm" tppabs="http://lua-users.org/wiki/SwitchStatement" >SwitchStatement</a> - emulating a C-style switch statement in Lua (design pattern)<li> <a href="ResourceAcquisitionIsInitialization.htm" tppabs="http://lua-users.org/wiki/ResourceAcquisitionIsInitialization" >ResourceAcquisitionIsInitialization</a> - automatically releasing acquired resources on scope exit, RAII (module,pattern)<li> <a href="CppMetaprogramming.htm" tppabs="http://lua-users.org/wiki/CppMetaprogramming" >CppMetaprogramming</a> - C++ metaprogramming using Lua (design pattern, library)<li> <a href="FiniteStateMachine.htm" tppabs="http://lua-users.org/wiki/FiniteStateMachine" >FiniteStateMachine</a> - finite state machine (FSMs) (design pattern)<li> <a href="MakingLuaLikePhp.htm" tppabs="http://lua-users.org/wiki/MakingLuaLikePhp" >MakingLuaLikePhp</a> - PHP-like functions implemented in Lua (functions)<li> <a href="MakingLuaLikeRuby.htm" tppabs="http://lua-users.org/wiki/MakingLuaLikeRuby" >MakingLuaLikeRuby</a> - Simulating some of the semantics of Ruby in Lua (design pattern)<li> <a href="CurriedMemoization.htm" tppabs="http://lua-users.org/wiki/CurriedMemoization" >CurriedMemoization</a> - A simple memoization implementation allowing multiple arguments and return values.  </UL>
<li> <strong>Other</strong><UL>
<li> <a href="LuaCompilerInLua.htm" tppabs="http://lua-users.org/wiki/LuaCompilerInLua" >LuaCompilerInLua</a> - reimplements the Lua compiler front-end (luac.c) in Lua (program)<li> <a href="LuaInterpreterInLua.htm" tppabs="http://lua-users.org/wiki/LuaInterpreterInLua" >LuaInterpreterInLua</a> - reimplements the Lua interpreter (lua.c) in Lua (program)<li> <a href="RandomSample.htm" tppabs="http://lua-users.org/wiki/RandomSample" >RandomSample</a> - random permutation/combination via lazy table approach (design pattern) <li> <a href="RandomStrings.htm" tppabs="http://lua-users.org/wiki/RandomStrings" >RandomStrings</a> - generate random strings from defined char sets (function)<li> <a href="DemoScripts.htm" tppabs="http://lua-users.org/wiki/DemoScripts" >DemoScripts</a> - random examples to showcase Lua<li> <a href="StlToObj.htm" tppabs="http://lua-users.org/wiki/StlToObj" >StlToObj</a> - convert ASCII STL files to OBJ (Wavefront) files with optional coloring<li> <a href="LuaCad.htm" tppabs="http://lua-users.org/wiki/LuaCad" >LuaCad</a> - Simple OpenSCAD wrapper for Lua in Windows</UL>
<li> <strong>Lua C API samples</strong><UL>
<li> <strong>C</strong><UL>
<li> <a href="BindingWithMetatableAndClosures.htm" tppabs="http://lua-users.org/wiki/BindingWithMetatableAndClosures" >BindingWithMetatableAndClosures</a><li> <a href="BindingWithMembersAndMethods.htm" tppabs="http://lua-users.org/wiki/BindingWithMembersAndMethods" >BindingWithMembersAndMethods</a><li> <a href="DeferredCall.htm" tppabs="http://lua-users.org/wiki/DeferredCall" >DeferredCall</a> - deferred calls using C closures<li> <a href="EasyManualLibraryLoad.htm" tppabs="http://lua-users.org/wiki/EasyManualLibraryLoad" >EasyManualLibraryLoad</a> - greatly simplifies manual loading (<code>GetProcAddress</code> or <code>dlsym</code>) of Lua 5.1 shared library (.dll or .so)<li> <a href="GettingValuesFromLua.htm" tppabs="http://lua-users.org/wiki/GettingValuesFromLua" >GettingValuesFromLua</a> (4.x and 5.x)<li> <a href="LibraryWithUserdataExample.htm" tppabs="http://lua-users.org/wiki/LibraryWithUserdataExample" >LibraryWithUserdataExample</a> (5.2)<li> <a href="LuaGenericCall.htm" tppabs="http://lua-users.org/wiki/LuaGenericCall" >LuaGenericCall</a> - a single function to call Lua interpreter from C, exchanging nearly any type of data<li> <a href="LuaLaunchers.htm" tppabs="http://lua-users.org/wiki/LuaLaunchers" >LuaLaunchers</a> - sample code for launching Lua as a standalone app<li> <a href="LexicalAnalysis.htm" tppabs="http://lua-users.org/wiki/LexicalAnalysis" >LexicalAnalysis</a><li> <a href="SimpleLuaApiExample.htm" tppabs="http://lua-users.org/wiki/SimpleLuaApiExample" >SimpleLuaApiExample</a> - simple intro to interfacing to Lua from C: C program loads/runs a Lua script file, sets Lua variables and retrieves return value (example)<li> <a href="StringReplace.htm" tppabs="http://lua-users.org/wiki/StringReplace" >StringReplace</a> <li> <a href="UserDataExample.htm" tppabs="http://lua-users.org/wiki/UserDataExample" >UserDataExample</a><li> <a href="UserDataWithPointerExample.htm" tppabs="http://lua-users.org/wiki/UserDataWithPointerExample" >UserDataWithPointerExample</a><li> <a href="FileLineMacros.htm" tppabs="http://lua-users.org/wiki/FileLineMacros" >FileLineMacros</a> - implements a simple __FILE__ and __LINE__ macro mechanism in the Lua parser. (Uses the internals of Lua, not the official Lua C API.)<li> <a href="ValidateUnicodeString.htm" tppabs="http://lua-users.org/wiki/ValidateUnicodeString" >ValidateUnicodeString</a> - extends Lua to handle UTF-8 strings with new string.* methods.<li> <a href="UnicodeIdentifers.htm" tppabs="http://lua-users.org/wiki/UnicodeIdentifers" >UnicodeIdentifers</a> - extends Lua to handle Lua UTF-8 identifiers (variable and function names)</UL>
<li> <strong>C++</strong><UL>
<li> <a href="CallingLuaFromCpp.htm" tppabs="http://lua-users.org/wiki/CallingLuaFromCpp" >CallingLuaFromCpp</a><li> <a href="CppConvenientLuaWrapperClass.htm" tppabs="http://lua-users.org/wiki/CppConvenientLuaWrapperClass" >CppConvenientLuaWrapperClass</a><li> <a href="CppLuaDataPassing.htm" tppabs="http://lua-users.org/wiki/CppLuaDataPassing" >CppLuaDataPassing</a> - passsing data between C++ and Lua<li> <a href="CppObjectBinding.htm" tppabs="http://lua-users.org/wiki/CppObjectBinding" >CppObjectBinding</a><li> <a href="DoItYourselfCppBinding.htm" tppabs="http://lua-users.org/wiki/DoItYourselfCppBinding" >DoItYourselfCppBinding</a><li> <a href="ExtractingWxClasses.htm" tppabs="http://lua-users.org/wiki/ExtractingWxClasses" >ExtractingWxClasses</a><li> <a href="SimplerCppBinding.htm" tppabs="http://lua-users.org/wiki/SimplerCppBinding" >SimplerCppBinding</a> </UL>
<li> <strong>Objective-C</strong><UL>
<li> <a href="VeritasMachine.htm" tppabs="http://lua-users.org/wiki/VeritasMachine" >VeritasMachine</a>(Lua-ObjC bind and implementation)</UL>
</UL>
</UL>
<p>
<H3>Lua 4.x</H3>
<p>
<em>These should be upgraded to the latest Lua version.</em><p>
<UL>
<li> <strong>Lua samples</strong><UL>
<li> <a href="ClassesAndMethods.htm" tppabs="http://lua-users.org/wiki/ClassesAndMethods" >ClassesAndMethods</a><li> <a href="DebuggingAndTesting.htm" tppabs="http://lua-users.org/wiki/DebuggingAndTesting" >DebuggingAndTesting</a><li> <a href="ListDep.htm" tppabs="http://lua-users.org/wiki/ListDep" >ListDep</a> - outputs a list of dependencies between Lua files (command-line program)<li> <a href="ListOperations.htm" tppabs="http://lua-users.org/wiki/ListOperations" >ListOperations</a> - utility functions operating on lists, functional programming (functions)<li> <a href="LuaFunctors.htm" tppabs="http://lua-users.org/wiki/LuaFunctors" >LuaFunctors</a><li> <a href="MailBoxParsing.htm" tppabs="http://lua-users.org/wiki/MailBoxParsing" >MailBoxParsing</a><li> <a href="NamespacesAndModules.htm" tppabs="http://lua-users.org/wiki/NamespacesAndModules" >NamespacesAndModules</a> - module/namespace handling in Lua 4 (design pattern) (Lua 4 specific)</UL>
</UL>
<p>
<UL>
<UL>
<li> <a href="PersistentTables.htm" tppabs="http://lua-users.org/wiki/PersistentTables" >PersistentTables</a><li> <a href="PhiLhoSoftLuaSamples.htm" tppabs="http://lua-users.org/wiki/PhiLhoSoftLuaSamples" >PhiLhoSoftLuaSamples</a><li> <a href="PythonDictionaries.htm" tppabs="http://lua-users.org/wiki/PythonDictionaries" >PythonDictionaries</a><li> <a href="PythonLists.htm" tppabs="http://lua-users.org/wiki/PythonLists" >PythonLists</a><li> <a href="ShellAccess.htm" tppabs="http://lua-users.org/wiki/ShellAccess" >ShellAccess</a><li> <a href="SimpleDebugger.htm" tppabs="http://lua-users.org/wiki/SimpleDebugger" >SimpleDebugger</a><li> <a href="TextJustification.htm" tppabs="http://lua-users.org/wiki/TextJustification" >TextJustification</a><li> <a href="TextProcessing.htm" tppabs="http://lua-users.org/wiki/TextProcessing" >TextProcessing</a><li> <a href="VectorGlue.htm" tppabs="http://lua-users.org/wiki/VectorGlue" >VectorGlue</a></UL>
<li> <strong>Lua C API samples</strong><UL>
<li> <strong>C</strong><UL>
<li> <a href="VectorLibrarySample.htm" tppabs="http://lua-users.org/wiki/VectorLibrarySample" >VectorLibrarySample</a></UL>
<li> <strong>C++</strong><UL>
<li> <a href="SimpleCppBinding.htm" tppabs="http://lua-users.org/wiki/SimpleCppBinding" >SimpleCppBinding</a></UL>
</UL>
</UL>
<p>
<hr><em>If you are thinking of contributing source code the <a href="SourceCodeFormatter.htm" tppabs="http://lua-users.org/wiki/SourceCodeFormatter" >SourceCodeFormatter</a> may be helpful to you.</em><p>
<H3>See also</H3>
<UL>
<li> <a href="OptimisationTips.htm" tppabs="http://lua-users.org/wiki/OptimisationTips" >OptimisationTips</a> - for making Lua code more efficient<li> <a href="OptimizedSampleCode.htm" tppabs="http://lua-users.org/wiki/OptimizedSampleCode" >OptimizedSampleCode</a> - for best known algorithms that perform the specified tasks<li> <a href="LuaDirectory.htm" tppabs="http://lua-users.org/wiki/LuaDirectory" >LuaDirectory</a> - for solutions to common problems<li> <a href="LuaTutorial.htm" tppabs="http://lua-users.org/wiki/LuaTutorial" >LuaTutorial</a> - for usage examples of core Lua functions (examples)<li> <a href="LibrariesAndBindings.htm" tppabs="http://lua-users.org/wiki/LibrariesAndBindings" >LibrariesAndBindings</a> - for modules (modules)<li> <a href="LuaForge.htm" tppabs="http://lua-users.org/wiki/LuaForge" >LuaForge</a> - for programs and modules in Lua (modules, programs)<li> <a href="LuaDesignPatterns.htm" tppabs="http://lua-users.org/wiki/LuaDesignPatterns" >LuaDesignPatterns</a> - for design patterns in Lua (design patterns)</UL>
<hr>
<a href="RecentChanges.htm" tppabs="http://lua-users.org/wiki/RecentChanges" >RecentChanges</a> &middot; <a href="javascript:if(confirm(%27http://lua-users.org/cgi-bin/wiki.pl?action=editprefs  \n\nThis file was not retrieved by Teleport Ultra, because it is addressed on a path excluded by the site\%27s Robot Exclusion parameters.  (Teleport Ultra\%27s compliance with this system is optional; see the Project Properties, Netiquette page.)  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/cgi-bin/wiki.pl?action=editprefs%27" tppabs="http://lua-users.org/cgi-bin/wiki.pl?action=editprefs" >preferences</a><br>
<a href="javascript:if(confirm(%27http://lua-users.org/cgi-bin/wiki.pl?action=edit&id=SampleCode  \n\nThis file was not retrieved by Teleport Ultra, because it is addressed on a path excluded by the site\%27s Robot Exclusion parameters.  (Teleport Ultra\%27s compliance with this system is optional; see the Project Properties, Netiquette page.)  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/cgi-bin/wiki.pl?action=edit&id=SampleCode%27" tppabs="http://lua-users.org/cgi-bin/wiki.pl?action=edit&id=SampleCode" >edit</a> &middot; <a href="javascript:if(confirm(%27http://lua-users.org/cgi-bin/wiki.pl?action=history&id=SampleCode  \n\nThis file was not retrieved by Teleport Ultra, because it is addressed on a path excluded by the site\%27s Robot Exclusion parameters.  (Teleport Ultra\%27s compliance with this system is optional; see the Project Properties, Netiquette page.)  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/cgi-bin/wiki.pl?action=history&id=SampleCode%27" tppabs="http://lua-users.org/cgi-bin/wiki.pl?action=history&id=SampleCode" >history</a><br>Last edited September 30, 2015 10:38 pm GMT <a href="javascript:if(confirm(%27http://lua-users.org/cgi-bin/wiki.pl?action=browse&diff=1&id=SampleCode  \n\nThis file was not retrieved by Teleport Ultra, because it is addressed on a path excluded by the site\%27s Robot Exclusion parameters.  (Teleport Ultra\%27s compliance with this system is optional; see the Project Properties, Netiquette page.)  \n\nDo you want to open it from the server?%27))window.location=%27http://lua-users.org/cgi-bin/wiki.pl?action=browse&diff=1&id=SampleCode%27" tppabs="http://lua-users.org/cgi-bin/wiki.pl?action=browse&diff=1&id=SampleCode" >(diff)</a>
</body>
</html>